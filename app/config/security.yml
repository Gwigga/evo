security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
        #in_memory:
        #    memory:
        #        users:
        #            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
        #            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        #main:
        #    pattern:             .*
        #    context:             user
        #    form_login:
        #        provider:       fos_userbundle
        #        login_path:     /login
        #        use_forward:    false
        #        check_path:     /login_check
        #        failure_path:   null
        #    logout:             true
        #    anonymous:          true

        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        #admin:
        #    pattern:            /admin(.*)
        #    context:            user
        #    form_login:
        #       provider:       fos_userbundle
        #       login_path:     /admin/login
        #       use_forward:    false
        #       check_path:     /admin/login_check
        #       failure_path:   null
        #    logout:
        #       path:           /admin/logout
        #    anonymous:          true
        admin:
            pattern:            ^/
            anonymous: true
            oauth:
                failure_path: /connect
                login_path: /connect
                check_path: /connect
                resource_owners:
                    google: "/login/check-google"
                provider: fos_userbundle
                #use_forward: false
                oauth_user_provider:
                    #oauth: ~
                    service: my_user_provider
            logout:
                path: /logout
                target: /connect

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }


    acl:
        connection: default
        
parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
